apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: offline-diags
spec:
  entrypoint: offline-diags
  volumes:
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  templates:
    - name: offline-diags
      tolerations:
        - effect: NoSchedule
          key: dedicated
          value: med-sim-pool
      inputs:
        parameters:
          - name: ml-model
          - name: training_config
          - name: training_data_config
          - name: test_data_config
          - name: offline-diags-output
          - name: report-output
          - {name: use-wandb, value: "false"}
          - {name: wandb-project, value: "argo-default"}
          - {name: wandb-tags, value: ""}
          - {name: wandb-run-group, value: ""}
          - {name: memory, value: 10Gi}

      container:
        image: us.gcr.io/vcm-ml/fv3net
        command: ["bash", "-c", "-x"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
          - name: WANDB_ENTITY
            value: ai2cm
          - name: WANDB_PROJECT
            value: "{{inputs.parameters.wandb-project}}"
          - name: WANDB_TAGS
            value: "{{inputs.parameters.wandb-tags}}"
          - name: WANDB_RUN_GROUP
            value: "{{inputs.parameters.wandb-run-group}}"
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
        args:
          - |

            gcloud auth activate-service-account --key-file "$GOOGLE_APPLICATION_CREDENTIALS"

            cat << EOF > test_data.yaml
            {{inputs.parameters.test_data_config}}
            EOF

            python -m fv3net.diagnostics.offline.compute \
              {{inputs.parameters.ml-model}} \
              test_data.yaml \
              {{inputs.parameters.offline-diags-output}}

            cat << EOF > training.yaml
            {{inputs.parameters.training_config}}
            EOF
            cat << EOF > training_data.yaml
            {{inputs.parameters.training_data_config}}
            EOF

            if [ "{{inputs.parameters.use-wandb}}" == "false" ];
            then
              wandb_flag=" "
            else
              wandb_flag="--wandb"
            fi

            python -m fv3net.diagnostics.offline.views.create_report \
              {{inputs.parameters.offline-diags-output}} \
              {{inputs.parameters.report-output}} \
              --commit-sha "$COMMIT_SHA" \
              --training-config \
              training.yaml \
              --training-data-config \
              training_data.yaml \
              $wandb_flag

      podSpecPatch: |
        containers:
          - name: main
            resources:
              limits:
                cpu: "1000m"
                memory: "{{inputs.parameters.memory}}"
              requests:
                cpu: "1000m"
                memory: "{{inputs.parameters.memory}}"

