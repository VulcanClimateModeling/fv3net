apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: offline-diags
spec:
  entrypoint: offline-diags
  volumes:
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  serviceAccountName: integration-tests
  tolerations:
    - effect: NoSchedule
      key: dedicated
      value: climate-sim-pool
  templates:
    - name: offline-diags
      inputs:
        parameters:
          - name: image-tag
          - name: ml-model
          # argo submit yaml is processed beforehand to have config and times fed in as string parameters
          - name: config  
          - name: times  
          - name: offline-diags-output
          - name: report-output
          - name: data-path
      container:
        image: us.gcr.io/vcm-ml/fv3net
        command: ["bash", "-c", "-x"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
        args:
          - |

            gcloud auth activate-service-account --key-file "$GOOGLE_APPLICATION_CREDENTIALS"

            cat <<EOF >config.yaml
            {{inputs.parameters.config}}
            EOF
            
            cat << EOF > times.json
            {{inputs.parameters.times}}
            EOF

            echo "Configuration:"
            cat config.yaml
    
            python -m offline_ml_diags.compute_diags \
              {{inputs.parameters.data-path}} \
              config.yaml \
              {{inputs.parameters.ml-model}} \
              {{inputs.parameters.offline-diags-output}} \
              --timesteps-file times.json
              
            python -m offline_ml_diags.create_report \
              {{inputs.parameters.offline-diags-output}} \
              {{inputs.parameters.report-output}} \
              --commit-sha {{inputs.parameters.image-tag}}

        resources:
          requests:
            memory: "6Gi"
            cpu: "1000m"
          limits:
            memory: "10Gi"
            cpu: "1000m"
