apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: prognostic-run-diags
spec:
  arguments:
    parameters:
    - name: runs
    - name: recompute-diagnostics
      value: "false"
    - name: flags
      value: " "
  entrypoint: all
  volumes:
  - name: gcp-key-secret
    secret:
      secretName: gcp-key
  templates:
  - name: all
    steps:
    - - name: diagnostics-step
        when: "{{workflow.parameters.recompute-diagnostics}} == true"
        withParam: "{{workflow.parameters.runs}}"
        template: diagnostics
        arguments:
          parameters:
            - name: run
              value: "{{item.url}}"
            - name: output
              value: "{{item.url}}_diagnostics"
            - name: flags
              value: "{{workflow.parameters.flags}}"
    - - name: generate-report
        template: report
        arguments:
          parameters:
            - name: runs
              value: "{{workflow.parameters.runs}}"
  - name: report
    inputs:
      parameters:
      - name: runs
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      image: us.gcr.io/vcm-ml/fv3net
      resources:
        requests:
          memory: "6Gi"
          cpu: "1000m"
        limits:
          memory: "8Gi"
          cpu: "1000m"
      command: ["bash", "-c", "-x", "-e"]
      args:
      - |
        cat << EOFRUNDIRSJSON > rundirs.json
        {{inputs.parameters.runs}}
        EOFRUNDIRSJSON
        prognostic_run_diags report-from-json \
          --urls-are-rundirs \
          rundirs.json \
          gs://vcm-ml-public/argo/{{workflow.name}}
      workingDir: /home/jovyan/fv3net/workflows/diagnostics
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
  - name: report-single-run
    inputs:
      parameters:
      - name: diags-url
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      image: us.gcr.io/vcm-ml/fv3net
      resources:
        requests:
          memory: "6Gi"
          cpu: "1000m"
      command: ["bash", "-c", "-x", "-e"]
      args:
      - |
        output_path=vcm-ml-public/argo/$(date +%F)-$(openssl rand -hex 6)
        prognostic_run_diags report-from-urls "{{inputs.parameters.diags-url}}" -o gs://${output_path}
        echo "Prognostic run report available at https://storage.googleapis.com/${output_path}/index.html"
  - name: diagnostics
    inputs:
      parameters:
      - name: run
      - name: output
      - name: flags
        value: " "
    dag:
      tasks:
      - name: movies
        template: movie
        arguments:
          parameters:
            - {name: run, value: "{{inputs.parameters.run}}"}
            - {name: output, value: "{{inputs.parameters.output}}"}
      - name: compute-reduced-diagnostics
        template: compute-reduced-diagnostics
        arguments:
          parameters:
            - {name: run, value: "{{inputs.parameters.run}}"}
            - {name: output, value: "{{inputs.parameters.output}}"}
            - {name: flags, value: "{{inputs.parameters.flags}}"}
      - name: regrid-reduced-diagnostics-to-latlon
        dependencies: [compute-reduced-diagnostics]
        templateRef:
          name: cubed-to-latlon
          template: regrid-single-input
        arguments:
          parameters:
            - {name: input, value: "{{inputs.parameters.output}}/diags.nc"}
            - {name: output, value: "{{inputs.parameters.output}}/diags_latlon.nc"}
  - name: compute-reduced-diagnostics
    inputs:
      parameters:
      - name: run
      - name: output
      - name: flags
        value: " "
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      image: us.gcr.io/vcm-ml/fv3net
      resources:
        requests:
          memory: "25Gi"
          cpu: "7500m"
        limits:
          memory: "25Gi"
          cpu: "8000m"
      command: ["/bin/bash", "-x", "-e", "-c"]
      args:
      - |
        prognostic_run_diags save {{inputs.parameters.flags}} {{inputs.parameters.run}} diags.nc
        prognostic_run_diags metrics diags.nc > metrics.json
        gsutil cp diags.nc "{{inputs.parameters.output}}/diags.nc"
        gsutil cp metrics.json "{{inputs.parameters.output}}/metrics.json"
      workingDir: /home/jovyan/fv3net/workflows/diagnostics
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
  - name: movie
    inputs:
      parameters:
      - name: run
      - name: output
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "climate-sim-pool"
      effect: "NoSchedule"
    container:
      image: us.gcr.io/vcm-ml/fv3net
      resources:
        requests:
          memory: "25Gi"
          cpu: "25500m"
        limits:
          memory: "25Gi"
          cpu: "26000m"
      command: ["/bin/bash", "-x", "-e", "-c"]
      args:
      - |
        prognostic_run_diags movie --n_timesteps 960 --n_jobs 26 {{inputs.parameters.run}} {{inputs.parameters.output}}
      workingDir: /home/jovyan/fv3net/workflows/diagnostics
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
