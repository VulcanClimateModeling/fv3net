apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: prognostic-run-diags
spec:
  arguments:
    parameters:
    - name: runs
    - name: docker-image
      value: us.gcr.io/vcm-ml/fv3net:839e86df984bc8b9d482d3f68e786c4fdc9baca3
    - name: make-movies
      value: "false"
    - name: flags
      value: " "
  entrypoint: all
  volumes:
  - name: gcp-key-secret
    secret:
      secretName: gcp-key
  templates:
  - name: all
    dag:
      tasks:
      - name: diagnostics-step
        withParam: "{{workflow.parameters.runs}}"
        template: diagnostics
        arguments:
          parameters:
            - name: run
              value: "{{item.url}}"
            - name: output
              value: "gs://vcm-ml-public/argo/{{workflow.name}}/{{item.name}}"
            - name: flags
              value: "{{workflow.parameters.flags}}"
      - name: movie-step
        when: "{{workflow.parameters.make-movies}} == true"
        withParam: "{{workflow.parameters.runs}}"
        template: movie
        continueOn:
          failed: true
        arguments:
          parameters:
            - name: run
              value: "{{item.url}}"
            - name: output
              value: "gs://vcm-ml-public/argo/{{workflow.name}}/{{item.name}}"
      - name: generate-report
        template: report
        dependencies: [diagnostics-step, movie-step]
  - name: report
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "climate-sim-pool"
      effect: "NoSchedule"
    container:
      image: '{{workflow.parameters.docker-image}}'
      command:
      - python
      - generate_report.py
      - gs://vcm-ml-public/argo/{{workflow.name}}
      - gs://vcm-ml-public/argo/{{workflow.name}}/index.html
      workingDir: /home/jovyan/fv3net/workflows/prognostic_run_diags
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS 
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      resources:
        requests:
            memory: "6Gi"
            cpu: "1000m"
        limits:
            memory: "6Gi"
            cpu: "1000m"
  - name: diagnostics
    inputs:
      parameters:
      - name: run
      - name: output
      - name: image
        value: '{{workflow.parameters.docker-image}}'
      - name: flags
        value: " "
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "climate-sim-pool"
      effect: "NoSchedule"
    container:
      image: '{{inputs.parameters.image}}'
      command: ["/bin/bash", "-x", "-c"]
      args:
      - | 
        cacheKey=`echo "{{inputs.parameters.run}}" | cut -c6- | sed 's/\//-/g'`
        gsutil ls gs://vcm-ml-archive/prognostic_run_diags/$cacheKey > /dev/null
        lsExitCode=`echo $?`
        set -e
        if [[ $lsExitCode -eq 0 ]]; then
            echo "Prognostic run diagnostics detected in cache for given run. Using cached diagnostics."
        else
            echo "No prognostic run diagnostics detected in cache for given run. Computing diagnostics and adding to cache."	
            python save_prognostic_run_diags.py {{inputs.parameters.flags}} \
              {{inputs.parameters.run}} diags.nc
            python metrics.py diags.nc > metrics.json
            gsutil cp diags.nc gs://vcm-ml-archive/prognostic_run_diags/$cacheKey/diags.nc
            gsutil cp metrics.json gs://vcm-ml-archive/prognostic_run_diags/$cacheKey/metrics.json	
        fi

        gsutil cp gs://vcm-ml-archive/prognostic_run_diags/$cacheKey/diags.nc {{inputs.parameters.output}}/diags.nc	
        gsutil cp gs://vcm-ml-archive/prognostic_run_diags/$cacheKey/metrics.json {{inputs.parameters.output}}/metrics.json
      workingDir: /home/jovyan/fv3net/workflows/prognostic_run_diags
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      resources:
        requests:
            memory: "12Gi"
            cpu: "1000m"
        limits:
            memory: "12Gi"
            cpu: "1000m"
  - name: movie
    inputs:
      parameters:
      - name: run
      - name: output
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "climate-sim-pool"
      effect: "NoSchedule"
    container:
      image: '{{workflow.parameters.docker-image}}'
      command: ["/bin/bash", "-x", "-e", "-c"]
      args:
      - |
        python generate_movie_stills.py {{inputs.parameters.run}} /tmp/movie_stills
        bash stitch_movie_stills.sh /tmp/movie_stills {{inputs.parameters.output}}
      workingDir: /home/jovyan/fv3net/workflows/prognostic_run_diags
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
        value: /secret/gcp-credentials/key.json
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      resources:
        requests:
            memory: "8Gi"
            cpu: "8000m"
        limits:
            memory: "8Gi"
            cpu: "8000m"
