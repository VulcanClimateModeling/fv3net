apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: emulation-
spec:
  entrypoint: emulation
  volumes:
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  volumeClaimTemplates:
    - metadata:
        name: work-volume
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
  tolerations:
    - effect: NoSchedule
      key: dedicated
      value: med-sim-pool
  arguments:
    parameters:
      - name: train-data
      - name: train-config
      - name: model-output
  templates:
    - name: emulation
      steps:
      - - name: train-model
          template: train-model
          arguments:
            parameters:
            - name: train-data
              value: "{{workflow.parameters.train-data}}"
            - name: train-config
              value: "{{workflow.parameters.train-config}}"
      - - name: upload-model
          template: upload-model
          arguments:
            parameters:
            - name: model-output
              value: "{{workflow.parameters.model-output}}"
    - name: train-model
      inputs:
        parameters:
          - name: train-data
          - name: train-config
      container:
        image: us.gcr.io/vcm-ml/fv3fit:emulation-2020-10-25
        command: ["bash", "-c", "-x"]
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
          - mountPath: /mnt/data
            name: work-volume
        args:
          - |

            cat <<EOF > /mnt/data/config.yaml
            {{inputs.parameters.train-config}}
            EOF

            echo "Configuration:"
            cat /mnt/data/config.yaml
    
            python -m fv3fit.emulation \
              {{inputs.parameters.train-data}} \
              /mnt/data/config.yaml \
              /mnt/data/

        resources:
          requests:
            memory: "14Gi"
            cpu: "6"
          limits:
            memory: "25Gi"
            cpu: "7500m"
    - name: upload-model
      inputs:
        parameters:
        - name: model-output
      container:
        image: google/cloud-sdk:latest
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
          - mountPath: /mnt/data
            name: work-volume
        command: [bash, "-c", "-x"]
        args:
          - |
            gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

            gsutil -m cp -r /mnt/data {{inputs.parameters.model-output}}
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"

            
