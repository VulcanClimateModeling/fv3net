# vim: set sts=2 ts=2 tw=2 sw=2 :
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: training
spec:
  entrypoint: training
  volumes:
    - name: workdir
      emptyVol: {}
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  templates:
    - name: training
      inputs:
        parameters:
          - name: train_config
          - name: train_data_config
          - name: validation_data_config
          - name: output
          - {name: memory, value: 6Gi}
          - {name: flags, value: " "}
      container:
        image: us.gcr.io/vcm-ml/prognostic_run
        command: ["bash", "-c", "-x"]
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
        args:
          - |

            cat <<EOF >train_config.yaml
            {{inputs.parameters.train_config}}
            EOF

            cat <<EOF >train_data.yaml
            {{inputs.parameters.train_data_config}}
            EOF

            cat <<EOF >validation_data.yaml
            {{inputs.parameters.validation_data_config}}
            EOF

            echo "Training Configuration:"
            cat train_config.yaml
            echo "Training Data Configuration:"
            cat train_data.yaml
            echo "Validation Data Configuration:"
            cat validation_data.yaml
                
            python3 -m fv3fit.train \
              train_config.yaml \
              train_data.yaml \
              validation_data.yaml \
              {{inputs.parameters.output}} \
              {{inputs.parameters.flags}}
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "med-sim-pool"
        effect: "NoSchedule"      
      podSpecPatch: |
        containers:
          - name: main
            resources:
              limits:
                cpu: "1000m"
                memory: "{{inputs.parameters.memory}}"
              requests:
                cpu: "1000m"
                memory: "{{inputs.parameters.memory}}"
