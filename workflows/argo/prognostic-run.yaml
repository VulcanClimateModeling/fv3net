# vim: set sts=2 ts=2 tw=2 sw=2 :
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: prognostic-run
spec:
  templates:
    - name: prognostic-run
      inputs:
        parameters:
          - {name: image-tag}
          - {name: initial-condition}
          - {name: config}
          - {name: reference-restarts}
          - {name: trained-ml}
          - {name: store-true-args, value: ""}
          - {name: output}
      steps:
      - - name: prepare-config
          template: prepare-config
          arguments:
            parameters:
              - {name: image-tag, value: "{{inputs.parameters.image-tag}}"}
              - {name: initial-condition, value: "{{inputs.parameters.initial-condition}}"}
              - {name: config, value: "{{inputs.parameters.config}}"}
              - {name: reference-restarts, value: "{{inputs.parameters.reference-restarts}}"}
              - {name: trained-ml, value: "{{inputs.parameters.trained-ml}}"}
              - {name: store-true-args, value: "{{inputs.parameters.store-true-args}}"}
      - - name: run-model
          templateRef:
            name: run-fv3gfs
            template: run-fv3gfs
          arguments:
            parameters:
              - {name: fv3config, value: "{{steps.prepare-config.outputs.parameters.fv3config}}"}
              - {name: runfile, value: "{{steps.prepare-config.outputs.parameters.runfile}}"}
              - {name: chunks, value: ""}  # will force use of default chunks
              - name: fv3gfs-image
                value: "us.gcr.io/vcm-ml/prognostic_run:{{inputs.parameters.image-tag}}"
              - {name: output-url, value: "{{inputs.parameters.output}}"}
              - name: post-process-image
                value: "us.gcr.io/vcm-ml/post_process_run:{{inputs.parameters.image-tag}}"
    - name: prepare-config
      inputs:
        parameters:
          - name: image-tag
          - name: initial-condition
          - name: config
          - name: reference-restarts
          - name: trained-ml
          - name: store-true-args
      outputs:
        parameters:
          - {name: fv3config, valueFrom: {path: /tmp/fv3config.yaml}}
          - name: runfile
            valueFrom:
              path: ~/fv3net/workflows/prognostic_c48_run/sklearn_runfile.py
      container:
        image: us.gcr.io/vcm-ml/fv3net:{{inputs.parameters.image-tag}}
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
        command: ["bash", "-c", "-x"]
        args:
          - |
            cat << EOF > config.yaml
            {{inputs.parameters.config}}
            EOF

            python ~/fv3net/workflows/prognostic_c48_run/prepare_config.py \
              --model_url {{inputs.parameters.trained-ml}} \
              --prog_config_yml config.yaml \
              {{inputs.parameters.reference-restarts}} \
              {{workflow.parameters.initial-condition}} \
              {{inputs.parameters.store-true-args}} \
              > /tmp/fv3config.yaml
