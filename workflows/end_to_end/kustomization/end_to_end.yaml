storage_proto: gs
storage_root: vcm-ml-data/test-end-to-end-integration
experiment:
  name: $JOBNAME
  unique_id: false
  steps_to_run:
    #- coarsen_restarts  # not doing C384 -> C12 coarsening
    - coarsen_diagnostics
    - one_step_run
    - create_training_data
    - train_sklearn_model
    - test_sklearn_model
    - prognostic_run
    - baseline_run
  
  steps_config:
    coarsen_restarts:
      command: python -m fv3net.pipelines.coarsen_restarts
      args:
        data_to_coarsen:
          location: $C384_RESTARTS
        grid_spec: 
          location: $GRIDSPEC
        source-resolution: 384
        target-resolution: 12
        --runner: DataflowRunner

    coarsen_diagnostics:
      command: python workflows/coarsen_c384_diagnostics/coarsen_c384_diagnostics.py
      args:
        c384_diagnostics:
          location: $C384_DIAGNOSTICS
        coarsening_config: $CONFIG/coarsen_c384_diagnostics.yml

    one_step_run:
      command: python workflows/one_step_jobs/orchestrate_submit_jobs.py
      args:
        restart_data:
          #from: coarsen_restarts  # uncomment this line and delete the following to include coarsening in test workflow
          location: $C12_RESTARTS
        experiment_yaml: $CONFIG/one_step_jobs.yml
        docker_image: $PROGNOSTIC_RUN_IMAGE
        timesteps: $ONE_STEP_TIMES

    create_training_data:
      command: python -m fv3net.pipelines.create_training_data
      args:
        one_step_data:
          from: one_step_run
        diagnostics_data:
          from: coarsen_diagnostics
        timestep_splits: $TRAIN_AND_TEST_TIMES
        --runner: DataflowRunner

    train_sklearn_model:
      command: python -m fv3net.regression.sklearn
      args:
        training_data:
          from: create_training_data
        train-config-file: $CONFIG/train_sklearn_model.yml
        
    test_sklearn_model: 
      argo: argo submit workflows/argo/offline_diagnostics.yml
      args:
        trained-model:
          from: train_sklearn_model
        testing-data:
          from: create_training_data
        diagnostics-data:
          from: coarsen_diagnostics
        docker-image: $FV3NET_IMAGE

    prognostic_run:
      command: python workflows/prognostic_c48_run/orchestrate_submit_job.py
      args:
        restart_data:
          location: $C12_RESTARTS
        ic_timestep: $IC_TIMESTEP
        docker_image: $PROGNOSTIC_RUN_IMAGE
        --prog_config_yml: $CONFIG/prognostic_run.yml
        --model_url:
          from: train_sklearn_model

    baseline_run:
      command: python workflows/prognostic_c48_run/orchestrate_submit_job.py
      args:
        restart_data:
          location: $C12_RESTARTS
        ic_timestep: $IC_TIMESTEP 
        docker_image: $PROGNOSTIC_RUN_IMAGE
        --prog_config_yml: $CONFIG/prognostic_run.yml

    prognostic_run_clean:
      command: python workflows/prognostic_c48_run/post_process.py
      args:
        rundir:
          from: prognostic_run
