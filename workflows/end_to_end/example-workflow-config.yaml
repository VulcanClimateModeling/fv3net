storage_proto: gs
storage_root: vcm-ml-data/orchestration-testing
experiment:
  name: test-experiment
  unique_id: True
  steps_to_run:
    - coarsen_restarts
    - coarsen_diagnostics
    - one_step_run
    - create_training_data
#     - train_sklearn_model
#     - test_sklearn_model
#     - prognostic_run
#     - diags_prognostic_run
  
  steps_config:
    coarsen_restarts:
      command: python -m fv3net.pipelines.coarsen_restarts
      args:
        data_to_coarsen:
          location: gs://vcm-ml-data/orchestration-testing/shield-C384-restarts-2019-12-04
        grid_spec: 
          location: gs://vcm-ml-data/2020-01-06-C384-grid-spec-with-area-dx-dy
        source-resolution: 384
        target-resolution: 48
        --runner: DataflowRunner
    
    coarsen_diagnostics:
      command: python ./workflows/coarsen_c384_diagnostics/coarsen_c384_diagnostics.py
      args:
        c384_diagnostics: 
          location: gs://vcm-ml-data/2019-12-05-40-day-X-SHiELD-simulation-C384-diagnostics/gfsphysics_15min_coarse.zarr
        coarsening_config: workflows/coarsen_c384_diagnostics/coarsen-c384-diagnostics.yml
    
    one_step_run:
      command: python workflows/one_step_jobs/orchestrate_submit_jobs.py
      args:
        --restart_data:
          from: coarsen_restarts
        experiment_yaml: ./workflows/one_step_jobs/all-physics-off.yml
        docker_image: us.gcr.io/vcm-ml/prognostic-run-orchestration
    
    create_training_data:
      command: workflows/create_training_data/orchestrator_job.sh
      args:
        one_step_data:
          from: one_step_run
        diagnostics_data:
          from: coarsen_diagnostics
        timesteps-per-output-file: 2
        mask-to-surface-type: 
        train-fraction: 0.5
        --runner: DataflowRunner
        
    train_sklearn_model:
      command: workflows/sklearn_regression/orchestrator_train_sklearn.sh
      args:
        training_data:
          from: create_training_data
        train-config-file: ./workflows/sklearn_regression/example_base_rf_training_config.yml
        
    test_sklearn_model: 
      command: workflows/sklearn_regression/orchestrator_test_sklearn.sh
      args:
        trained_model:
          from: train_sklearn_model
        testing_data:
          from: create_training_data
        diagnostics_data:
          from: coarsen_diagnostics
        num-test-zarrs: 4
    
    prognostic_run:
      command: python workflows/prognostic_c48_run/orchestrate_submit_job.py
      args:
        sklearn_model:
          from: train_sklearn_model
        restart_file_dir:
          from: one_step_run
        prognostic_yaml_adjust: workflows/prognostic_c48_run/prognostic_config.yml
        ic_timestep: "20160801.001500"
        docker_image: us.gcr.io/vcm-ml/prognostic-run-orchestration

    diags_prognostic_run:
      command: bash workflows/prognostic_run_diags/run.sh
      args:
        fv3_output:
          from: prognostic_run