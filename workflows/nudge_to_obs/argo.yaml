apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argo-nudge-to-obs-
spec:
  arguments:
    parameters:
      - name: restart-pvc
        value: nudging-read-only
      - name: nudging-config
      - name: output-url
      - name: fv3gfs-image
        value: us.gcr.io/vcm-ml/fv3gfs-python:v0.4.3
      - name: fv3net-image
        value: us.gcr.io/vcm-ml/fv3net:396d9853498c0f45c13c3fa72202ca841d5378e8
      - name: post-process-image
        value: us.gcr.io/vcm-ml/post_process_run:396d9853498c0f45c13c3fa72202ca841d5378e8
  entrypoint: main
  volumeClaimTemplates:
    - metadata:
        name: output-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 500Gi
  volumes:
    - name: restart-data
      persistentVolumeClaim:
        claimName: '{{workflow.parameters.restart-pvc}}'
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  templates:
    - name: main
      steps:
        - - template: prepare-config
            name: prepare-config
        - - name: run-model
            template: fv3gfs
        - - name: upload-outputs
            template: post-process
    - name: prepare-config
      container:
        # need to run as root to read the mounted PVC
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
        image: "{{workflow.parameters.fv3net-image}}"
        command: ["/bin/bash", "-c"]
        workingDir: /home/jovyan/fv3net/workflows/nudge_to_obs
        args:
        - |
          cp runfile.py /mnt/data/runfile.py
          cp diag_table_nudge_to_obs /mnt/data/diag_table
          cp chunks.yaml /mnt/data/chunks.yaml
          echo "{{workflow.parameters.nudging-config}}" > config.yaml
          python prepare_config.py config.yaml /mnt/data > /mnt/data/fv3config.yaml
        volumeMounts:
          - name: output-data
            mountPath: /mnt/data
    - name: post-process
      container:
        image: "{{workflow.parameters.post-process-image}}"
        args: ["--chunks", "/mnt/data/chunks.yaml", "/mnt/data/rundir", "{{workflow.parameters.output-url}}"]
        volumeMounts:
          - name: output-data
            mountPath: /mnt/data
          - name: gcp-key-secret
            mountPath: /secret/gcp-credentials
            readOnly: true
    - name: fv3gfs
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "climate-sim-pool"
        effect: "NoSchedule"
      container:
        command:
          - python
          - -m
          - fv3config.fv3run._native_main
          - '[["/mnt/data/fv3config.yaml", "/mnt/data/rundir"],
            {"runfile": "/mnt/data/runfile.py", "capture_output":
            false}]'
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
        image: '{{workflow.parameters.fv3gfs-image}}'
        imagePullPolicy: Always
        resources:
          limits:
            memory: 8Gi
          requests:
            cpu: "6"
            memory: 8Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: output-data
            mountPath: /mnt/data
          - name: gcp-key-secret
            mountPath: /secret/gcp-credentials
            readOnly: true
