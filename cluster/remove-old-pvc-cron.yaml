apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: pvc-delete-cron
spec:
  schedule: "27 5/3 * * *"
  successfulJobsHistoryLimit: 8
  startingDeadlineSeconds: 300
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: delete-old-pvc
            image: google/cloud-sdk
            command:
              - "/bin/bash"
              - "-c"
            args: 
              - |
                apt-get install -y jq
                
                tmpdir=$(mktemp -d)
                kubectl get pvc -o json | \
                    jq -r '.items[] | {name: .metadata.name, wf_name: .metadata.labels."workflows.argoproj.io/workflow"}' | \
                    jq -r -c . > $tmpdir/pvc-list.txt

                HR_THRESHOLD=2

                beyond_age_threshold () {
                    finishedAt=$1

                    # Calculate time elapsed since PVC marked for deletion
                    del_time_s=$(date -u -d ${finishedAt} +%s)
                    curr_time_s=$(date -u +%s)
                    seconds=$((${curr_time_s} - ${del_time_s}))
                    hrs=$(($seconds / 60 / 60))

                    if [ ${hrs} -ge ${HR_THRESHOLD} ]; then
                        return 0
                    else
                        return 1
                    fi
                }

                for item in $(cat $tmpdir/pvc-list.txt); do
                    wf_name=$(echo $item | jq -r .wf_name)
                    pvc_name=$(echo $item | jq -r .name)

                    if [[ "$wf_name" != "null" ]]; then
                        
                        job_phase=$(kubectl get wf $wf_name -o json | jq -r .status.phase)
                        finishedAt=$(kubectl get wf $wf_name -o json | jq -r .status.finishedAt)

                        if [[ "$job_phase" == "Failed" || "$job_phase" == "Error" || "$job_phase" == "Succeeded" ]]; then
                            if `beyond_age_threshold $finishedAt`; then
                                echo Deleting $pvc_name [$wf_name $job_phase]
                                kubectl delete pvc $pvc_name --wait=false
                                kubectl patch pvc $pvc_name -p '{"metadata":{"finalizers":null}}'
                            fi
                        fi
                    fi
                done
            resources:
              requests:
                cpu: "200m"
                memory: "500M"
          restartPolicy: Never
          serviceAccountName: cron-buddy
      backoffLimit: 0
