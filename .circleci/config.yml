version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.6.1
jobs:
  pytest_default:    
    docker:
      - image: us.gcr.io/vcm-ml/circleci-miniconda-gfortran:latest
        auth:
          username: _json_key
          password: $DECODED_GOOGLE_CREDENTIALS
        environment:
          GOOGLE_APPLICATION_CREDENTIALS=key.json
    steps:
      - checkout
      - run:
          name: "Save GCS for tests."
          command: |
            echo $ENCODED_GOOGLE_CREDENTIALS | \
            base64 --decode > $GOOGLE_APPLICATION_CREDENTIALS
      - run: make update_submodules
      - run:
          name: "Concatenate package dependency files"
          command: cat environment.yml .circleci/.installed_build_env_deps > combined_deps.txt
      - restore_cache:
          keys:
            - v2-fv3net-env-{{ checksum "combined_deps.txt" }}
      - run:
          name: "Install fv3net dependencies"
          command: |
            make install_deps
            cat .circleci/.installed_build_env_deps
      - save_cache:
          key: v2-fv3net-env-{{ checksum "combined_deps.txt" }}
          paths:
            - /opt/conda/envs/fv3net
      - run:
          name: "Install fv3net packages"
          command: make install_local_packages
      - run: | 
          source activate fv3net
          pytest -m "not regression" --mpl --mpl-baseline-path=tests/baseline_images

  build_default:
    machine:
      docker_layer_caching: true
    environment:
      GOOGLE_PROJECT_ID: vcm-ml
      GOOGLE_COMPUTE_ZONE: us-central1
    steps:
      - checkout
      - run: sudo apt-get install make
      - run: |
          pip install --upgrade pip
          pip install wheel
      - run: |
          if [[ -z "$CIRCLE_TAG" ]]
          then
              use_version="latest"
          else
              use_version=$CIRCLE_TAG
          fi
          make build_images VERSION=$use_version
      - gcp-gcr/gcr-auth:
          gcloud-service-key: DECODED_GOOGLE_CREDENTIALS
      - run: |
          echo $CIRCLE_BRANCH
          echo $CIRCLE_TAG
          if [[ "$CIRCLE_BRANCH" == "master" ]]
          then
              echo "pushing untagged images as 'latest'"
              make push_image VERSION=latest
          fi
          if [[ ! -z "$CIRCLE_TAG" ]]
          then
              echo "pushing tagged images $CIRCLE_TAG"
              make push_image version=$CIRCLE_TAG
          fi
  
  lint:
    docker:
    - image: circleci/python:3.7
    steps:
    - checkout
    - run: sudo pip install black==19.10b0 flake8
    - run: make lint

  test_docker_pull:
    machine:
      docker_layer_caching: true
    environment:
      GOOGLE_PROJECT_ID: vcm-ml
      GOOGLE_COMPUTE_ZONE: us-central1
    steps:
      - gcp-gcr/gcr-auth:
          gcloud-service-key: DECODED_GOOGLE_CREDENTIALS
      - checkout
      - run: sudo apt-get install make
      - run: |
          pyenv versions
          [ -d /opt/circleci/.pyenv/versions/3.7.0 ] || pyenv install 3.7.0
          pyenv global 3.7.0
          pip install --upgrade pip setuptools
      # - run: docker pull us.gcr.io/vcm-ml/fv3gfs-python:v0.2.1
      - run: make build_image_prognostic_run

  
workflows:
  version: 2
  test_and_lint:
    jobs:
      - lint
      - pytest_default
      - test_docker_pull
  build_and_push:
    jobs:
      - pytest_default:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - build_default:
          requires: 
            - pytest_default
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
            
              
