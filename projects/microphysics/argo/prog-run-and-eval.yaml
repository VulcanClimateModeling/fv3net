apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: prognostic-microphysics-
  labels:
    project: microphysics-emulation
    job_type: prognostic-evaluation
spec:
  entrypoint: prognostic-run
  arguments:
    parameters:
      - name: tag
      - name: config
      - name: tf_model
  volumes:
  - name: gcp-key-secret
    secret:
      secretName: gcp-key
  templates:
  - name: prognostic-run
    dag:
      tasks:
        - name: run-offline
          template: run-model
          arguments:
            parameters:
            - name: tag
              value: "{{workflow.parameters.tag}}-offline"
            - name: config
              value:  "{{workflow.parameters.config}}"
            - name: tf_model
              value: "{{workflow.parameters.tf_model}}"
            - name: on_off_flag
              value: --offline
        - name: run-online
          template: run-model
          arguments:
            parameters:
            - name: tag
              value: "{{workflow.parameters.tag}}-online"
            - name: config
              value:  "{{workflow.parameters.config}}"
            - name: tf_model
              value: "{{workflow.parameters.tf_model}}"
            - name: on_off_flag
              value: --online
        - name: piggy-online
          template: piggyback-diags
          dependencies: [run-online]
          arguments:
            parameters:
            - name: tag
              value: "{{workflow.parameters.tag}}-online"
        - name: piggy-offline
          template: piggyback-diags
          dependencies: [run-offline]
          arguments:
            parameters:
            - name: tag
              value: "{{workflow.parameters.tag}}-offline"
        - name: prognostic-diags
          dependencies: [run-offline, run-online]
          template: prognostic-diags
          arguments:
            parameters:
            - name: tag
              value: "{{workflow.parameters.tag}}-online"
            - name: baseline_tag
              value: "{{workflow.parameters.tag}}-offline"
  - name: run-model
    inputs:
      parameters:
      - name: tag
      - name: config
      - name: tf_model
      - name: on_off_flag
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      # from this commit: fff1c75ad9a90c0aeaf31cb248f21dec4c5d2231
      image: "us.gcr.io/vcm-ml/prognostic_run@sha256:0f5c595ef2b43f0574ea807619dc5d0324eeb7220eda58cdf729f8200c54e523"
      imagePullPolicy: Always
      workingDir: "/fv3net/projects/microphysics"
      resources:
        requests:
          memory: "16Gi"
          cpu: "7500m"
        limits:
          memory: "16Gi"
          cpu: "7500m"
      envFrom:
      - secretRef:
          name: wandb-andrep
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: WANDB_RUN_GROUP
        value: "{{inputs.parameters.tag}}"
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      command: ["bash", "-c", "-x", "-e"]
      args:
      - |
        echo "{{inputs.parameters.config}}" | base64 --decode > fv3config.yaml
        python3 scripts/prognostic_run.py \
          --tag "{{inputs.parameters.tag}}" \
          --config-path fv3config.yaml \
          --model "{{inputs.parameters.tf_model}}" \
          "{{inputs.parameters.on_off_flag}}"
  - name: piggyback-diags
    inputs:
      parameters:
      - name: tag
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      image: "us.gcr.io/vcm-ml/fv3net:latest"
      imagePullPolicy: Always
      resources:
        requests:
          memory: "6Gi"
          cpu: "3000m"
        limits:
          memory: "15Gi"
          cpu: "3000m"
      envFrom:
      - secretRef:
          name: wandb-andrep
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: WANDB_RUN_GROUP
        value: "{{inputs.parameters.tag}}"
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      workingDir: "/home/jovyan/fv3net/projects/microphysics"
      command:
      - prognostic_run_diags
      - piggy
      - "{{inputs.parameters.tag}}"
  - name: prognostic-diags
    inputs:
      parameters:
      - name: tag
      - name: baseline_tag
    tolerations:
    - key: "dedicated"
      operator: "Equal"
      value: "med-sim-pool"
      effect: "NoSchedule"
    container:
      image: "us.gcr.io/vcm-ml/fv3net:latest"
      imagePullPolicy: Always
      resources:
        requests:
          memory: "6Gi"
          cpu: "3000m"
        limits:
          memory: "15Gi"
          cpu: "3000m"
      envFrom:
      - secretRef:
          name: wandb-andrep
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /secret/gcp-credentials/key.json
      - name: WANDB_RUN_GROUP
        value: "{{inputs.parameters.tag}}"
      volumeMounts:
      - mountPath: /secret/gcp-credentials
        name: gcp-key-secret
      workingDir: "/home/jovyan/fv3net/projects/microphysics"
      command: ["python3"]
      args:
      - scripts/prognostic_evaluate.py
      - "{{inputs.parameters.tag}}"
      - --baseline-tag
      - "{{inputs.parameters.baseline_tag}}"
