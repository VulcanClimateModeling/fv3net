apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: train-microphysics-
  labels:
    project: microphysics-emulation
    job_type: train
spec:
  entrypoint: training
  arguments:
    parameters:
    - name: tag
      value: ":8fc663ea9bf56db13196ed2a21e89737f35c4550"
    - name: wandb-run-group
      value: ""
    - name: training-config
    - name: flags
      value: ""
  volumes:
    - name: gcp-key-secret
      secret:
        defaultMode: 420
        secretName: gcp-key
  templates:
    - name: training
      steps:
      - - name: train-model
          template: train-model
          continueOn:
            failed: true
          arguments:
            parameters:
            - name: training-config
              value: "{{workflow.parameters.training-config}}"
            - name: flags
              value: "{{workflow.parameters.flags}}"
      - - name: score-model
          template: score-model
          arguments:
            parameters:
            - name: training-config
              value: "{{workflow.parameters.training-config}}"
            - name: flags
              value: "{{workflow.parameters.flags}}"
    - name: train-model
      inputs:
        parameters:
          - name: training-config
          - {name: flags, value: " "}
      container:
        image: "us.gcr.io/vcm-ml/prognostic_run{{workflow.parameters.tag}}"
        command: ["bash", "-c", "-x"]
        envFrom:
        - secretRef:
            name: wandb-andrep
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
          - name: WANDB_NAME
            value: "{{workflow.name}}"
          - name: WANDB_RUN_GROUP
            value: "{{workflow.parameters.wandb-run-group}}"
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
        resources:
          limits:
            cpu: "7"
            memory: "20Gi"
          requests:
            cpu: "4"
            memory: "15Gi"
        args:
          - |
            echo "{{inputs.parameters.training-config}}" | base64 --decode > training_config.yaml

            python3 -m fv3fit.train_microphysics \
              --config-path training_config.yaml \
              --wandb.job_type train \
              {{inputs.parameters.flags}}
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "med-sim-pool"
        effect: "NoSchedule"
    - name: score-model
      inputs:
        parameters:
          - name: training-config
          - {name: flags, value: " "}
      container:
        image: "us.gcr.io/vcm-ml/prognostic_run{{workflow.parameters.tag}}"
        command: ["bash", "-c", "-x"]
        workingDir: "/fv3net/projects/microphysics"
        envFrom:
        - secretRef:
            name: wandb-andrep
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
          - name: WANDB_NAME
            value: "{{workflow.name}}"
          - name: WANDB_RUN_GROUP
            value: "{{workflow.parameters.wandb-run-group}}"
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
        resources:
          limits:
            cpu: "7"
            memory: "28G"
          requests:
            cpu: "7"
            memory: "28G"
        args:
          - |
            echo "{{inputs.parameters.training-config}}" | base64 --decode > training_config.yaml

            python3 scripts/score_training.py \
              --config-path training_config.yaml \
              --wandb.job_type train_score \
              {{inputs.parameters.flags}}
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "med-sim-pool"
        effect: "NoSchedule"

