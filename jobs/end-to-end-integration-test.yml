apiVersion: v1
data:
  FV3NET_IMAGE: us.gcr.io/vcm-ml/fv3net:b8143681219169cdd8ad2c47aa53ffe5dc664364
  PROGNOSTIC_RUN_IMAGE: us.gcr.io/vcm-ml/prognostic_run:b8143681219169cdd8ad2c47aa53ffe5dc664364
  coarsen_c384_diagnostics_integration.yml: |
    hi-res-data-vars:
      - LHTFLsfc_coarse
      - SHTFLsfc_coarse
      - PRATEsfc_coarse
      - DSWRFtoa_coarse
      - DSWRFsfc_coarse
      - USWRFtoa_coarse
      - USWRFsfc_coarse
      - DLWRFsfc_coarse
      - ULWRFtoa_coarse
      - ULWRFsfc_coarse
    target_resolution: 48
  create_training_data_variable_names.yml: "# suffixes that denote whether flux variable
    is from the coarsened\n# high resolution prognostic run or the coarse res one
    step train data run\nsuffix_hires: \"prog\"\nsuffix_coarse_train: \"train\"\n\n#
    maps data variable to its source term name\nvar_source_name_map:\n    \"x_wind\":
    \"dQU\"\n    \"y_wind\": \"dQV\"\n    \"air_temperature\": \"dQ1\"\n    \"specific_humidity\":
    \"dQ2\"      \n\nphysics_tendency_names:\n  \"specific_humidity\": \"pQ2\"\n  \"air_temperature\":
    \"pQ1\"\n\ninit_time_dim: \"initial_time\"\nforecast_time_dim: \"forecast_time\"\nstep_time_dim:
    \"step\"\n\nstep_for_state: \"after_physics\"\n\ncoord_before_physics: \"after_dynamics\"\ncoord_after_physics:
    \"after_physics\"\n\ncoord_x_center : \"x\"   \ncoord_y_center : \"y\"    \ncoord_z_center
    : \"z\"\n\nvar_lon_center: \"lon\"\nvar_lat_center: \"lat\"\nvar_lon_outer: \"lonb\"\nvar_lat_outer:
    \"latb\"\n\nrenamed_dims: \n  grid_xt: \"x\"\n  grid_yt: \"y\"\n  grid_x: \"x_interface\"\n
    \ grid_y: \"y_interface\"\n  initialization_time: \"initial_time\"\n\nedge_dims:\n
    \ - \"x_interface\"\n  - \"y_interface\"\n\nedge_to_center_dims:\n  \"x_interface\":
    \"x\"\n  \"y_interface\": \"y\"\n\ngrid_vars:\n  - \"area\"\n  - \"latb\"\n  -
    \"lonb\"\n  - \"lat\"\n  - \"lon\"\n\nvar_x_wind: \"x_wind\"\nvar_y_wind: \"y_wind\"\nvar_temp:
    \"air_temperature\"\nvar_sphum: \"specific_humidity\"\nvar_land_sea_mask: \"land_sea_mask\"\n\n#
    data variables from one step output used as features and targets\none_step_vars:
    \n  - \"dQU\"\n  - \"dQV\"\n  - \"dQ1\"\n  - \"dQ2\"\n  - \"pQ1\"\n  - \"pQ2\"\n
    \ - \"surface_temperature\"\n  - \"land_sea_mask\"\n  - \"surface_geopotential\"\n
    \ - \"vertical_thickness_of_atmospheric_layer\"\n  - \"vertical_wind\"\n  - \"pressure_thickness_of_atmospheric_layer\"\n
    \ - \"specific_humidity\"\n  - \"air_temperature\"\n  - \"DSWRFtoa_train\"\n  -
    \"DSWRFsfc_train\"\n  - \"USWRFtoa_train\"\n  - \"USWRFsfc_train\"\n  - \"DLWRFsfc_train\"\n
    \ - \"ULWRFtoa_train\"\n  - \"ULWRFsfc_train\"\n\n\n# data variables from high
    res data kept in final dataset\n# these are names from coarsened SHiELD output,
    before renaming\nhigh_res_data_variables:\n  - \"DSWRFtoa_coarse\"\n  - \"DSWRFsfc_coarse\"\n
    \ - \"USWRFtoa_coarse\"\n  - \"USWRFsfc_coarse\"\n  - \"DLWRFsfc_coarse\"\n  -
    \"ULWRFtoa_coarse\"\n  - \"ULWRFsfc_coarse\"\n  - \"SHTFLsfc\"\n  - \"LHTFLsfc\"\n
    \ - \"PRATEsfc\"\n\ndiag_vars:\n  - \"DSWRFtoa\"\n  - \"DSWRFsfc\"\n  - \"USWRFtoa\"\n
    \ - \"USWRFsfc\"\n  - \"DLWRFsfc\"\n  - \"ULWRFtoa\"\n  - \"ULWRFsfc\"\n  - \"SHTFLsfc\"\n
    \ - \"LHTFLsfc\"\n  - \"PRATEsfc\"\n"
  diag_table_prognostic: |
    default_experiment
    2016 08 01 00 0 0
    #output files
    "atmos_static",           -1,  "hours",    1, "hours", "time"
    "atmos_dt_atmos",          0,  "hours",    1, "hours",  "time"
    "atmos_8xdaily",           3,  "hours",    1, "hours",  "time"
    "sfc_dt_atmos",            0,  "hours",    1, "hours", "time"
    #
    #output variables
    #
    ###
    # atmos_static
    ###
     "dynamics",      "pk",          "pk",           "atmos_static",      "all", .false.,  "none", 2
     "dynamics",      "bk",          "bk",           "atmos_static",      "all", .false.,  "none", 2
     "dynamics",      "hyam",        "hyam",         "atmos_static",      "all", .false.,  "none", 2
     "dynamics",      "hybm",        "hybm",         "atmos_static",      "all", .false.,  "none", 2
     "dynamics",      "zsurf",       "HGTsfc",       "atmos_static",      "all", .false.,  "none", 2
    ###
    # atmos_dt_atmos
    ###
     "dynamics",  "grid_lont",   "lon",           "atmos_dt_atmos", "all", .false.,  "none", 2,
     "dynamics",  "grid_latt",   "lat",           "atmos_dt_atmos", "all", .false.,  "none", 2,
     "dynamics",  "grid_lon",    "lonb",          "atmos_dt_atmos", "all", .false.,  "none", 2,
     "dynamics",  "grid_lat",    "latb",          "atmos_dt_atmos", "all", .false.,  "none", 2,
     "dynamics",  "area",        "area",          "atmos_dt_atmos", "all", .false.,  "none", 2,
     "dynamics",  "us",          "UGRDlowest",    "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "u850",        "UGRD850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "u500",        "UGRD500",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "u200",        "UGRD200",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "u50",         "UGRD50",        "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "vs",          "VGRDlowest",    "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "v850",        "VGRD850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "v500",        "VGRD500",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "v200",        "VGRD200",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "v50",         "VGRD50",        "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "tb",          "TMPlowest",    "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "t850",        "TMP850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "t500",        "TMP500",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "t200",        "TMP200",       "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "w850",        "VVEL850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "w500",        "VVEL500",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "w200",        "VVEL200",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "w50",         "VVEL50",        "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "vort850",     "VORT850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "vort500",     "VORT500",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "vort200",     "VORT200",       "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "z850",        "h850",          "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "z500",        "h500",          "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "z200",        "h200",          "atmos_dt_atmos", "all", .false.,  "none", 2
    ####
     "dynamics",  "dp1000",       "DPT1000",      "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "dp850",        "DPT850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "dp500",        "DPT500",       "atmos_dt_atmos", "all", .false.,  "none", 2
    ###
     "dynamics",  "rh1000",       "RH1000",      "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "rh925",        "RH925",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "rh850",        "RH850",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "rh700",        "RH700",       "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "rh500",        "RH500",       "atmos_dt_atmos", "all", .false.,  "none", 2
    ####
     "dynamics",  "slp",         "PRMSL",        "atmos_dt_atmos", "all", .false.,  "none", 2
     "dynamics",  "ps",          "PRESsfc",      "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "tq",          "PWAT",         "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "lw",          "VIL",          "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "iw",          "iw",           "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "w100m",       "VVEL100m",     "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "w2500m",      "VVEL2500m",    "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "w5km",        "VVEL5km",      "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics", "max_reflectivity",  "REFC",    "atmos_dt_atmos", "all",.false., "none", 2
     "dynamics", "base_reflectivity", "REFD1km", "atmos_dt_atmos", "all",.false., "none", 2
     "dynamics",  "echo_top",    "RETOP",        "atmos_dt_atmos", "all",.false., "none", 2
     "dynamics",  "ctt",         "TMPctp",       "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "ctp",         "PRESctp",      "atmos_dt_atmos", "all", .false., "none", 2
     "dynamics",  "ctz" ,        "HGTctp",       "atmos_dt_atmos", "all", .false., "none", 2
    ###
    # atmos_8xdaily
    ###
     "dynamics",  "grid_lont",   "lon",           "atmos_8xdaily", "all", .false.,  "none", 2,
     "dynamics",  "grid_latt",   "lat",           "atmos_8xdaily", "all", .false.,  "none", 2,
     "dynamics",  "grid_lon",    "lonb",          "atmos_8xdaily", "all", .false.,  "none", 2,
     "dynamics",  "grid_lat",    "latb",          "atmos_8xdaily", "all", .false.,  "none", 2,
     "dynamics",  "area",        "area",          "atmos_8xdaily", "all", .false.,  "none", 2,
     "dynamics",  "ucomp",        "ucomp",        "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "vcomp",        "vcomp",        "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "temp",         "temp",         "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "delp",         "delp",         "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "sphum",        "sphum",        "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "pfnh",         "nhpres",       "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "w",            "w",            "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "delz",         "delz",         "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "ps",           "ps",           "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "reflectivity", "reflectivity", "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "liq_wat",      "liq_wat",      "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "ice_wat",      "ice_wat",      "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "rainwat",      "rainwat",      "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "snowwat",      "snowwat",      "atmos_8xdaily",  "all",  .false.,  "none",  2
     "dynamics",  "graupel",      "graupel",      "atmos_8xdaily",  "all",  .false.,  "none",  2
    ###
    # sfc_dt_atmos
    ###
     "dynamics",  "grid_lont",     "lon",       "sfc_dt_atmos",         "all",  .false.,  "none", 2
     "dynamics",  "grid_latt",     "lat",       "sfc_dt_atmos",         "all",  .false.,  "none", 2
     "dynamics",  "grid_lon",      "lonb",      "sfc_dt_atmos",         "all", .false.,  "none", 2
     "dynamics",  "grid_lat",      "latb",      "sfc_dt_atmos",         "all", .false.,  "none", 2
     "dynamics",  "area",          "area",      "sfc_dt_atmos",         "all",  .false.,  "none", 2
     "gfs_phys",  "dusfci",    "uflx",     "sfc_dt_atmos",   "all",   .false.,  "none", 2
     "gfs_phys",  "dvsfci",    "vflx",     "sfc_dt_atmos",   "all",   .false.,  "none", 2
     "gfs_phys",  "cnvprcp_ave",    "CPRATsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "totprcp_ave",    "PRATEsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "totice_ave",     "ICEsfc",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "totsnw_ave",     "SNOWsfc",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "totgrp_ave",     "GRAUPELsfc", "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "DSWRF",          "DSWRFsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "USWRF",          "USWRFsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "DSWRFtoa",       "DSWRFtoa",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "USWRFtoa",       "USWRFtoa",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "ULWRFtoa",       "ULWRFtoa",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "ULWRF",          "ULWRFsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "DLWRF",          "DLWRFsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "lhtfl_ave",      "LHTFLsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "shtfl_ave",      "SHTFLsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "hpbl",           "HPBLsfc",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "fice",           "ICECsfc",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "SLMSKsfc",       "SLMSKsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "TCDC_aveclm",    "TCDCclm",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "TCDC_avehcl",    "TCDChcl",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "TCDC_avelcl",    "TCDClcl",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "TCDC_avemcl",    "TCDCmcl",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "q2m",            "SPFH2m",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "t2m",           "TMP2m",      "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "tsfc",          "TMPsfc",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "dpt2m",         "DPT2m",      "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "u10m",           "UGRD10m",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "v10m",           "VGRD10m",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "weasd",          "WEASDsfc",   "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "snowd",          "SNODsfc",    "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "tmpmax2m",       "TMAX2m",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "wind10mmax",     "MAXWIND10m", "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_phys",  "soilm",          "SOILM",      "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "SOILT1",         "SOILT1",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "SOILT2",         "SOILT2",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "SOILT3",         "SOILT3",     "sfc_dt_atmos",         "all",  .false.,  "none",  2
     "gfs_sfc",   "SOILT4",         "SOILT4",     "sfc_dt_atmos",         "all",  .false.,  "none",  2

    #=============================================================================================
    #
    #====> This file can be used with diag_manager/v2.0a (or higher) <====
    #
    #
    #  FORMATS FOR FILE ENTRIES (not all input values are used)
    #  ------------------------
    #
    #"file_name", output_freq, "output_units", format, "time_units", "long_name",
    #
    #
    #output_freq:  > 0  output frequency in "output_units"
    #              = 0  output frequency every time step
    #              =-1  output frequency at end of run
    #
    #output_units = units used for output frequency
    #               (years, months, days, minutes, hours, seconds)
    #
    #time_units   = units used to label the time axis
    #               (days, minutes, hours, seconds)
    #
    #
    #  FORMAT FOR FIELD ENTRIES (not all input values are used)
    #  ------------------------
    #
    #"module_name", "field_name", "output_name", "file_name" "time_sampling", time_avg, "other_opts", packing
    #
    #time_avg = .true. or .false.
    #
    #packing  = 1  double precision
    #         = 2  float
    #         = 4  packed 16-bit integers
    #         = 8  packed 1-byte (not tested?)
  docker_images.env: |-
    # these images will be used in the end-to-end yaml
    GCR_BASE=us.gcr.io/vcm-ml
    FV3NET_IMAGE=$GCR_BASE/fv3net:b8143681219169cdd8ad2c47aa53ffe5dc664364
    PROGNOSTIC_RUN_IMAGE=$GCR_BASE/prognostic_run:b8143681219169cdd8ad2c47aa53ffe5dc664364

    # need to export
    export FV3NET_IMAGE PROGNOSTIC_RUN_IMAGE
  end_to_end.yml: "storage_proto: gs\nstorage_root: vcm-ml-data/test-end-to-end-integration\nexperiment:\n
    \ # TODO this change is for debugging purposes. undo it before merging\n  name:
    end-to-end-integration-test\n  unique_id: false\n  steps_to_run:\n          #
    TODO uncomment this before final merge\n          #- coarsen_restarts  # this
    step is unreliable, so currently not part of integration test\n    - coarsen_diagnostics\n
    \   - one_step_run\n    - create_training_data\n    # Disabling this workflow
    (it is introducing NaNs into it's own data)\n    - train_sklearn_model\n      #
    - test_sklearn_model\n    - prognostic_run\n    - baseline_run\n  \n  steps_config:\n
    \   coarsen_restarts:\n      command: python -m fv3net.pipelines.coarsen_restarts\n
    \     args:\n        data_to_coarsen:\n          location: gs://vcm-ml-data/test-end-to-end-integration/C384-restarts\n
    \       grid_spec: \n          location: gs://vcm-ml-data/2020-01-06-C384-grid-spec-with-area-dx-dy\n
    \       source-resolution: 384\n        target-resolution: 48\n        --runner:
    DataflowRunner\n\n    coarsen_diagnostics:\n      command: python workflows/coarsen_c384_diagnostics/coarsen_c384_diagnostics.py\n
    \     args:\n        c384_diagnostics: \n          location: gs://vcm-ml-data/test-end-to-end-integration/C384-diagnostics/gfsphysics_15min_coarse.zarr\n
    \       coarsening_config: /etc/config/coarsen_c384_diagnostics_integration.yml\n\n
    \   one_step_run:\n      command: python workflows/one_step_jobs/orchestrate_submit_jobs.py\n
    \     args:\n        restart_data:\n          #from: coarsen_restarts  # uncomment
    this line and delete the following to include coarsening in test workflow\n          location:
    gs://vcm-ml-data/test-end-to-end-integration/C48-input-for-one-step-jobs\n        experiment_yaml:
    /etc/config/one_step_jobs_integration.yml\n        docker_image: us.gcr.io/vcm-ml/prognostic_run:b8143681219169cdd8ad2c47aa53ffe5dc664364\n
    \       --config-version: v0.3\n\n    create_training_data:\n      command: python
    -m fv3net.pipelines.create_training_data\n      args:\n        one_step_data:\n
    \         from: one_step_run\n        diagnostics_data:\n          from: coarsen_diagnostics\n
    \       variable_filename: /etc/config/create_training_data_variable_names.yml\n
    \       --timesteps-per-output-file: 1\n        --train-fraction: 0.5\n        \n
    \   train_sklearn_model:\n      command: python -m fv3net.regression.sklearn.train\n
    \     args:\n        training_data:\n          from: create_training_data\n        train-config-file:
    /etc/config/train_sklearn_model.yml\n        \n    test_sklearn_model: \n      command:
    python -m fv3net.diagnostics.sklearn_model_performance\n      args:\n        trained_model:\n
    \         from: train_sklearn_model\n        testing_data:\n          from: create_training_data\n
    \       diagnostics_data:\n          from: coarsen_diagnostics\n        variable_filename:
    /etc/config/test_sklearn_variable_names.yml\n        --num_test_zarrs: 2\n\n    prognostic_run:\n
    \     command: python workflows/prognostic_c48_run/orchestrate_submit_job.py\n
    \     args:\n        restart_file_dir:\n          from: one_step_run\n        ic_timestep:
    \"20160801.001500\"\n        docker_image: us.gcr.io/vcm-ml/prognostic_run:b8143681219169cdd8ad2c47aa53ffe5dc664364\n
    \       --prog_config_yml: /etc/config/prognostic_run_integration.yml\n        --model_url:\n
    \         from: train_sklearn_model\n\n    baseline_run:\n      command: python
    workflows/prognostic_c48_run/orchestrate_submit_job.py\n      args:\n        restart_file_dir:\n
    \         from: one_step_run\n        ic_timestep: \"20160801.001500\"\n        docker_image:
    us.gcr.io/vcm-ml/prognostic_run:b8143681219169cdd8ad2c47aa53ffe5dc664364\n        --prog_config_yml:
    /etc/config/prognostic_run_integration.yml"
  one_step_jobs_integration.yml: |
    kubernetes:
      docker_image: us.gcr.io/vcm-ml/fv3gfs-python:v0.3.1
    fv3config:
      diag_table: workflows/one_step_jobs/diag_table_one_step
      namelist:
        atmos_model_nml:
          fhout: 0.01666
        coupler_nml:
          days: 0
          minutes: 15
          seconds: 0
          dt_atmos: 60  # seconds
          dt_ocean: 60  # seconds
          restart_secs: 60
        fv_core_nml:
          external_eta: true
          npz: 79
          k_split: 1
          n_split: 1
        gfs_physics_nml:
          do_deep: false
          fhzero: 0.01666
  prognostic_run_integration.yml: |
    kubernetes:
      cpu_count: 6
      memory_gb: 5.
    diag_table: /etc/config/diag_table_prognostic
    namelist:
      coupler_nml:
        days: 0  # total length
        hours: 1
        minutes: 0
        seconds: 0
        dt_atmos: 900  # seconds
        dt_ocean: 900
        restart_secs: 0  # seconds - frequency to save restarts
      atmos_model_nml:
        fhout: 0.25   # hours - frequency to save physics outputs
      gfs_physics_nml:
        fhzero: 0.25  # hours - frequency at which precip is set back to zero
      fv_core_nml:
        n_split: 6   # num dynamics steps per physics step
  test_sklearn_variable_names.yml: "  \ninit_time_dim: \"initial_time\"\n\ncoord_x_center:
    \"x\"\ncoord_y_center: \"y\"\ncoord_z_center: \"z\"\n\nvar_lat: \"lat\"\nvar_lon:
    \"lon\"\n\ngrid_vars:\n  - \"lat\"\n  - \"lon\"\n  - \"latb\"\n  - \"lonb\"\n
    \ - \"area\"\n\nstack_dims:\n  - \"tile\"\n  - \"initial_time\"\n  - \"x\"\n  -
    \"y\"\n\nsuffix_coarse_train_diag: \"train\"\n\n\nvar_temp: \"air_temperature\"\nvar_sfc_temp:
    \"surface_temperature\"\nvar_sphum: \"specific_humidity\"\nvar_pressure_thickness:
    \"pressure_thickness_of_atmospheric_layer\"\nvar_q_heating_ml: \"dQ1\"\nvar_q_moistening_ml:
    \"dQ2\"\nvar_land_sea_mask: \"land_sea_mask\"\n\nrenamed_hires_grid_vars:\n  \"grid_xt\":
    \"x\"\n  \"grid_yt\": \"y\"\n\n\n# features for prediction and other variables
    to keep\npred_vars_to_keep:\n  - \"surface_temperature\"\n  - \"land_sea_mask\"\n
    \ - \"surface_geopotential\"\n  - \"pressure_thickness_of_atmospheric_layer\"\n
    \ - \"specific_humidity\"\n  - \"air_temperature\"\n  - \"surface_temperature\"\n#
    \ - \"DSWRFtoa_train\"\n\ndata_vars:\n  - \"dQ1\"\n  - \"dQ2\"\n  - \"specific_humidity\"\n
    \ - \"air_temperature\"\n  - \"surface_temperature\"\n  - \"net_precipitation\"\n
    \ - \"net_heating\"\n  - \"net_precipitation_physics\"\n  - \"net_heating_physics\"\n
    \ - \"net_precipitation_ml\"\n  - \"net_heating_ml\"\n  - \"pressure_thickness_of_atmospheric_layer\"\n
    \ \nmappable_var_kwargs:\n  coord_x_center: \"x\"\n  coord_y_center: \"y\"\n  coord_x_outer:
    \"x_interface\"\n  coord_y_outer: \"y_interface\"\n  coord_vars:\n    \"lonb\":
    \n      - \"y_interface\"\n      - \"x_interface\"\n      - \"tile\"\n    \"latb\":\n
    \     - \"y_interface\"\n      - \"x_interface\"\n      - \"tile\"\n    \"lon\":\n
    \     - \"y\"\n      - \"x\"\n      - \"tile\"\n    \"lat\":\n      - \"y\"\n
    \     - \"x\"\n      - \"tile\"\n"
  train_sklearn_model.yml: |
    model_type: sklearn_random_forest
    hyperparameters:
      max_depth: 13
      n_estimators: 1
    num_batches: 2
    mask_to_surface_type: none
    files_per_batch: 2
    input_variables:
      - air_temperature
      - specific_humidity
    output_variables:
      - dQ1
      - dQ2

    init_time_dim: "initial_time"
    coord_z_center: "z"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: integration-test
  namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: integration-test
  # do not use generateName. we want this to be deterministic
  name: end-to-end-integration-test
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: integration-tests
      containers:
      - command: ["/bin/bash", "-c"]
        args: 
          - |
              find /etc/config
              workflows/end_to_end/submit_workflow.sh $(CONFIG)/end_to_end.yml
        image: us.gcr.io/vcm-ml/fv3net:b8143681219169cdd8ad2c47aa53ffe5dc664364
        imagePullPolicy: Always
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secret/gcp-credentials/key.json
          - name: CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE
            value: /secret/gcp-credentials/key.json
          - name: PROGNOSTIC_RUN_IMAGE
            valueFrom:
              configMapKeyRef:
                name: integration-test
                key: PROGNOSTIC_RUN_IMAGE
          - name: FV3NET_IMAGE
            valueFrom:
              configMapKeyRef:
                name: integration-test
                key: FV3NET_IMAGE
          - name: CONFIG
            value: /etc/config
        name: integration-test
        resources:
          requests:
            cpu: "2"
            memory: 2G
        volumeMounts:
          - mountPath: /secret/gcp-credentials
            name: gcp-key-secret
            readOnly: true
          - mountPath:  /etc/config
            name: end-to-end-config
      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: dedicated
          effect: NoSchedule
          value: climate-sim-pool
      volumes:
        - name: gcp-key-secret
          secret:
            defaultMode: 444
            secretName: gcp-key
        - name: end-to-end-config
          configMap:
            name: integration-test
            
