xarray.Dataset {
dimensions:
	tile = 6 ;
	y = 8 ;
	x = 8 ;
	z = 19 ;
	y_interface = 9 ;
	x_interface = 9 ;

variables:
	float32 DLWRFsfc_coarse(tile, y, x) ;
		DLWRFsfc_coarse:cell_methods = time: point ;
		DLWRFsfc_coarse:long_name = surface downward longwave flux [W/m**2] ;
		DLWRFsfc_coarse:units = W/m**2 ;
	float32 DSWRFsfc_coarse(tile, y, x) ;
		DSWRFsfc_coarse:cell_methods = time: point ;
		DSWRFsfc_coarse:long_name = surface downward shortwave flux [W/m**2] ;
		DSWRFsfc_coarse:units = W/m**2 ;
	float32 DSWRFtoa_coarse(tile, y, x) ;
		DSWRFtoa_coarse:cell_methods = time: point ;
		DSWRFtoa_coarse:long_name = top of atmos downward shortwave flux [W/m**2] ;
		DSWRFtoa_coarse:units = W/m**2 ;
	float32 LHTFLsfc_coarse(tile, y, x) ;
		LHTFLsfc_coarse:cell_methods = time: point ;
		LHTFLsfc_coarse:long_name = surface latent heat flux [W/m**2] ;
		LHTFLsfc_coarse:units = w/m**2 ;
	float32 PRATEsfc_coarse(tile, y, x) ;
		PRATEsfc_coarse:cell_methods = time: point ;
		PRATEsfc_coarse:long_name = surface precipitation rate [kg/m**2/s] ;
		PRATEsfc_coarse:units = kg/m**2/s ;
	float32 SHTFLsfc_coarse(tile, y, x) ;
		SHTFLsfc_coarse:cell_methods = time: point ;
		SHTFLsfc_coarse:long_name = instantaneous surface sensible heat flux ;
		SHTFLsfc_coarse:units = XXX ;
	float32 T(tile, z, y, x) ;
		T:checksum = 84E9D5116058750E ;
		T:long_name = temperature ;
		T:units = K ;
	float32 T_storage(tile, z, y, x) ;
		T_storage:long_name = Storage of temperature ;
		T_storage:units = K/s ;
	float32 T_vulcan_omega_coarse(tile, z, y, x) ;
		T_vulcan_omega_coarse:long_name = Product of temperature and coarse-grained vulcan omega ;
		T_vulcan_omega_coarse:units = K Pa/s ;
	float32 ULWRFsfc_coarse(tile, y, x) ;
		ULWRFsfc_coarse:cell_methods = time: point ;
		ULWRFsfc_coarse:long_name = surface upward longwave flux [W/m**2] ;
		ULWRFsfc_coarse:units = W/m**2 ;
	float32 ULWRFtoa_coarse(tile, y, x) ;
		ULWRFtoa_coarse:cell_methods = time: point ;
		ULWRFtoa_coarse:long_name = top of atmos upward longwave flux [W/m**2] ;
		ULWRFtoa_coarse:units = W/m**2 ;
	float32 USWRFsfc_coarse(tile, y, x) ;
		USWRFsfc_coarse:cell_methods = time: point ;
		USWRFsfc_coarse:long_name = surface upward shortwave flux [W/m**2] ;
		USWRFsfc_coarse:units = W/m**2 ;
	float32 USWRFtoa_coarse(tile, y, x) ;
		USWRFtoa_coarse:cell_methods = time: point ;
		USWRFtoa_coarse:long_name = top of atmos upward shortwave flux [W/m**2] ;
		USWRFtoa_coarse:units = W/m**2 ;
	float32 area(tile, y, x) ;
		area:long_name = area_of_grid_cell ;
		area:units = m^2 ;
	float32 delp(tile, z, y, x) ;
		delp:checksum = F4877F0507E61627 ;
		delp:long_name = pressure thickness ;
		delp:units = Pa ;
	float32 dq3dt_deep_conv_coarse(tile, z, y, x) ;
		dq3dt_deep_conv_coarse:cell_methods = time: point ;
		dq3dt_deep_conv_coarse:long_name = moisture change due to physics 2 ;
		dq3dt_deep_conv_coarse:units = XXX ;
	float32 dq3dt_mp_coarse(tile, z, y, x) ;
		dq3dt_mp_coarse:cell_methods = time: point ;
		dq3dt_mp_coarse:long_name = moisture change due to physics 4 ;
		dq3dt_mp_coarse:units = XXX ;
	float32 dq3dt_pbl_coarse(tile, z, y, x) ;
		dq3dt_pbl_coarse:cell_methods = time: point ;
		dq3dt_pbl_coarse:long_name = moisture change due to physics 1 ;
		dq3dt_pbl_coarse:units = XXX ;
	float32 dq3dt_shal_conv_coarse(tile, z, y, x) ;
		dq3dt_shal_conv_coarse:cell_methods = time: point ;
		dq3dt_shal_conv_coarse:long_name = moisture change due to physics 3 ;
		dq3dt_shal_conv_coarse:units = XXX ;
	float32 dt3dt_deep_conv_coarse(tile, z, y, x) ;
		dt3dt_deep_conv_coarse:cell_methods = time: point ;
		dt3dt_deep_conv_coarse:long_name = temperature change due to physics 4 ;
		dt3dt_deep_conv_coarse:units = XXX ;
	float32 dt3dt_lw_coarse(tile, z, y, x) ;
		dt3dt_lw_coarse:cell_methods = time: point ;
		dt3dt_lw_coarse:long_name = temperature change due to physics 1 ;
		dt3dt_lw_coarse:units = XXX ;
	float32 dt3dt_mp_coarse(tile, z, y, x) ;
		dt3dt_mp_coarse:cell_methods = time: point ;
		dt3dt_mp_coarse:long_name = temperature change due to physics 6 ;
		dt3dt_mp_coarse:units = XXX ;
	float32 dt3dt_ogwd_coarse(tile, z, y, x) ;
		dt3dt_ogwd_coarse:cell_methods = time: point ;
		dt3dt_ogwd_coarse:long_name = temperature change due to physics 7 ;
		dt3dt_ogwd_coarse:units = XXX ;
	float32 dt3dt_pbl_coarse(tile, z, y, x) ;
		dt3dt_pbl_coarse:cell_methods = time: point ;
		dt3dt_pbl_coarse:long_name = temperature change due to physics 3 ;
		dt3dt_pbl_coarse:units = XXX ;
	float32 dt3dt_shal_conv_coarse(tile, z, y, x) ;
		dt3dt_shal_conv_coarse:cell_methods = time: point ;
		dt3dt_shal_conv_coarse:long_name = temperature change due to physics 5 ;
		dt3dt_shal_conv_coarse:units = XXX ;
	float32 dt3dt_sw_coarse(tile, z, y, x) ;
		dt3dt_sw_coarse:cell_methods = time: point ;
		dt3dt_sw_coarse:long_name = temperature change due to physics 2 ;
		dt3dt_sw_coarse:units = XXX ;
	float32 eddy_flux_vulcan_omega_sphum(tile, z, y, x) ;
		eddy_flux_vulcan_omega_sphum:cell_methods = time: mean ;
		eddy_flux_vulcan_omega_sphum:long_name = vulcan vertical eddy flux of specific humidity ;
		eddy_flux_vulcan_omega_sphum:time_avg_info = average_T1,average_T2,average_DT ;
		eddy_flux_vulcan_omega_sphum:units = Pa kg / kg / s ;
	float32 eddy_flux_vulcan_omega_temp(tile, z, y, x) ;
		eddy_flux_vulcan_omega_temp:cell_methods = time: mean ;
		eddy_flux_vulcan_omega_temp:long_name = vulcan vertical eddy flux of temperature ;
		eddy_flux_vulcan_omega_temp:time_avg_info = average_T1,average_T2,average_DT ;
		eddy_flux_vulcan_omega_temp:units = Pa K / s ;
	float32 exposed_area(tile, z, y, x) ;
		exposed_area:description = area where the fine resolution surface is below the coarse-resolution pressure midpoint ;
		exposed_area:long_name = exposed_area ;
		exposed_area:units = m^2 ;
	float32 qv_dt_fv_sat_adj_coarse(tile, z, y, x) ;
		qv_dt_fv_sat_adj_coarse:cell_methods = time: mean ;
		qv_dt_fv_sat_adj_coarse:long_name = specific humidity tendency due to dycore phase changes ;
		qv_dt_fv_sat_adj_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		qv_dt_fv_sat_adj_coarse:units = kg/kg/s ;
	float32 qv_dt_phys_coarse(tile, z, y, x) ;
		qv_dt_phys_coarse:cell_methods = time: mean ;
		qv_dt_phys_coarse:long_name = water vapor specific humidity tendency from physics ;
		qv_dt_phys_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		qv_dt_phys_coarse:units = kg/kg/s ;
	float32 sphum(tile, z, y, x) ;
		sphum:checksum = CEC95437F1418F74 ;
		sphum:long_name = specific humidity ;
		sphum:units = kg / kg ;
	float32 sphum_storage(tile, z, y, x) ;
		sphum_storage:long_name = Storage of specific humidity ;
		sphum_storage:units = kg / kg/s ;
	float32 sphum_vulcan_omega_coarse(tile, z, y, x) ;
		sphum_vulcan_omega_coarse:long_name = Product of specific humidity and coarse-grained vulcan omega ;
		sphum_vulcan_omega_coarse:units = kg / kg Pa/s ;
	float32 t_dt_fv_sat_adj_coarse(tile, z, y, x) ;
		t_dt_fv_sat_adj_coarse:cell_methods = time: mean ;
		t_dt_fv_sat_adj_coarse:long_name = temperature tendency due to dycore phase changes ;
		t_dt_fv_sat_adj_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		t_dt_fv_sat_adj_coarse:units = K/s ;
	float32 t_dt_nudge_coarse(tile, z, y, x) ;
		t_dt_nudge_coarse:cell_methods = time: mean ;
		t_dt_nudge_coarse:long_name = temperature tendency from nudging ;
		t_dt_nudge_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		t_dt_nudge_coarse:units = K/s ;
	float32 t_dt_phys_coarse(tile, z, y, x) ;
		t_dt_phys_coarse:cell_methods = time: mean ;
		t_dt_phys_coarse:long_name = temperature tendency from physics ;
		t_dt_phys_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		t_dt_phys_coarse:units = K/s ;
	float32 vulcan_omega_coarse(tile, z, y, x) ;
		vulcan_omega_coarse:cell_methods = time: mean ;
		vulcan_omega_coarse:long_name = coarse-grained vulcan omega ;
		vulcan_omega_coarse:time_avg_info = average_T1,average_T2,average_DT ;
		vulcan_omega_coarse:units = Pa/s ;
	float32 air_temperature(tile, z, y, x) ;
		air_temperature:checksum = 84E9D5116058750E ;
		air_temperature:long_name = temperature ;
		air_temperature:units = K ;
	float32 clear_sky_downward_longwave_flux_at_surface(tile, y, x) ;
		clear_sky_downward_longwave_flux_at_surface:units = W/m^2 ;
	float32 clear_sky_downward_shortwave_flux_at_surface(tile, y, x) ;
		clear_sky_downward_shortwave_flux_at_surface:units = W/m^2 ;
	float32 clear_sky_upward_longwave_flux_at_surface(tile, y, x) ;
		clear_sky_upward_longwave_flux_at_surface:units = W/m^2 ;
	float32 clear_sky_upward_longwave_flux_at_top_of_atmosphere(tile, y, x) ;
		clear_sky_upward_longwave_flux_at_top_of_atmosphere:units = W/m^2 ;
	float32 clear_sky_upward_shortwave_flux_at_surface(tile, y, x) ;
		clear_sky_upward_shortwave_flux_at_surface:units = W/m^2 ;
	float32 clear_sky_upward_shortwave_flux_at_top_of_atmosphere(tile, y, x) ;
		clear_sky_upward_shortwave_flux_at_top_of_atmosphere:units = W/m^2 ;
	float32 eastward_wind(tile, z, y, x) ;
		eastward_wind:units = m/s ;
	float32 land_sea_mask(tile, y, x) ;
		land_sea_mask:units =  ;
	float32 latent_heat_flux(tile, y, x) ;
		latent_heat_flux:cell_methods = time: point ;
		latent_heat_flux:long_name = surface latent heat flux [W/m**2] ;
		latent_heat_flux:units = w/m**2 ;
	float32 latitude(tile, y, x) ;
		latitude:units = radians ;
	float32 longitude(tile, y, x) ;
		longitude:units = radians ;
	float32 northward_wind(tile, z, y, x) ;
		northward_wind:units = m/s ;
	float32 pressure_thickness_of_atmospheric_layer(tile, z, y, x) ;
		pressure_thickness_of_atmospheric_layer:checksum = F4877F0507E61627 ;
		pressure_thickness_of_atmospheric_layer:long_name = pressure thickness ;
		pressure_thickness_of_atmospheric_layer:units = Pa ;
	float32 sensible_heat_flux(tile, y, x) ;
		sensible_heat_flux:cell_methods = time: point ;
		sensible_heat_flux:long_name = instantaneous surface sensible heat flux ;
		sensible_heat_flux:units = XXX ;
	float32 specific_humidity(tile, z, y, x) ;
		specific_humidity:checksum = CEC95437F1418F74 ;
		specific_humidity:long_name = specific humidity ;
		specific_humidity:units = kg / kg ;
	float32 surface_geopotential(tile, y, x) ;
		surface_geopotential:units = m^2 s^-2 ;
	float32 surface_precipitation_rate(tile, y, x) ;
		surface_precipitation_rate:cell_methods = time: point ;
		surface_precipitation_rate:long_name = surface precipitation rate [kg/m**2/s] ;
		surface_precipitation_rate:units = kg/m**2/s ;
	float32 surface_temperature(tile, y, x) ;
		surface_temperature:units = degK ;
	float32 total_precipitation(tile, y, x) ;
		total_precipitation:units = m ;
	float32 total_sky_downward_longwave_flux_at_surface(tile, y, x) ;
		total_sky_downward_longwave_flux_at_surface:cell_methods = time: point ;
		total_sky_downward_longwave_flux_at_surface:long_name = surface downward longwave flux [W/m**2] ;
		total_sky_downward_longwave_flux_at_surface:units = W/m**2 ;
	float32 total_sky_downward_shortwave_flux_at_surface(tile, y, x) ;
		total_sky_downward_shortwave_flux_at_surface:cell_methods = time: point ;
		total_sky_downward_shortwave_flux_at_surface:long_name = surface downward shortwave flux [W/m**2] ;
		total_sky_downward_shortwave_flux_at_surface:units = W/m**2 ;
	float32 total_sky_downward_shortwave_flux_at_top_of_atmosphere(tile, y, x) ;
		total_sky_downward_shortwave_flux_at_top_of_atmosphere:cell_methods = time: point ;
		total_sky_downward_shortwave_flux_at_top_of_atmosphere:long_name = top of atmos downward shortwave flux [W/m**2] ;
		total_sky_downward_shortwave_flux_at_top_of_atmosphere:units = W/m**2 ;
	float32 total_sky_upward_longwave_flux_at_surface(tile, y, x) ;
		total_sky_upward_longwave_flux_at_surface:cell_methods = time: point ;
		total_sky_upward_longwave_flux_at_surface:long_name = surface upward longwave flux [W/m**2] ;
		total_sky_upward_longwave_flux_at_surface:units = W/m**2 ;
	float32 total_sky_upward_longwave_flux_at_top_of_atmosphere(tile, y, x) ;
		total_sky_upward_longwave_flux_at_top_of_atmosphere:cell_methods = time: point ;
		total_sky_upward_longwave_flux_at_top_of_atmosphere:long_name = top of atmos upward longwave flux [W/m**2] ;
		total_sky_upward_longwave_flux_at_top_of_atmosphere:units = W/m**2 ;
	float32 total_sky_upward_shortwave_flux_at_surface(tile, y, x) ;
		total_sky_upward_shortwave_flux_at_surface:cell_methods = time: point ;
		total_sky_upward_shortwave_flux_at_surface:long_name = surface upward shortwave flux [W/m**2] ;
		total_sky_upward_shortwave_flux_at_surface:units = W/m**2 ;
	float32 total_sky_upward_shortwave_flux_at_top_of_atmosphere(tile, y, x) ;
		total_sky_upward_shortwave_flux_at_top_of_atmosphere:cell_methods = time: point ;
		total_sky_upward_shortwave_flux_at_top_of_atmosphere:long_name = top of atmos upward shortwave flux [W/m**2] ;
		total_sky_upward_shortwave_flux_at_top_of_atmosphere:units = W/m**2 ;
	float32 vertical_thickness_of_atmospheric_layer(tile, z, y, x) ;
		vertical_thickness_of_atmospheric_layer:units = m ;
	float32 vertical_wind(tile, z, y, x) ;
		vertical_wind:units = m/s ;
	float32 x_wind(tile, z, y_interface, x) ;
		x_wind:units = m/s ;
	float32 y_wind(tile, z, y, x_interface) ;
		y_wind:units = m/s ;
	float32 Q1(tile, z, y, x) ;
		Q1:units = K/s ;
		Q1:long_name = apparent heating from high resolution data ;
		Q1:description = Apparent heating due to physics and sub-grid-scale advection. Given by sat adjustment (dycore) + physics tendency + eddy-flux-convergence + temperature nudging ;
	float32 Q2(tile, z, y, x) ;
		Q2:units = kg/kg/s ;
		Q2:long_name = apparent moistening from high resolution data ;
		Q2:description = Apparent moistening due to physics and sub-grid-scale advection. Given by sat adjustment (dycore) + physics tendency + eddy-flux-convergence ;
	float32 storage_of_internal_energy_path_due_to_fine_res_temperature_nudging(tile, y, x) ;
		storage_of_internal_energy_path_due_to_fine_res_temperature_nudging:units = W/m**2 ;
		storage_of_internal_energy_path_due_to_fine_res_temperature_nudging:long_name = Column integrated heating tendency due to temperature nudging of fine-res run. ;
	float32 dQ1(tile, z, y, x) ;
		dQ1:units = K/s ;
		dQ1:long_name = apparent heating from high resolution data ;
		dQ1:description = Apparent heating due to physics and sub-grid-scale advection. Given by sat adjustment (dycore) + physics tendency + eddy-flux-convergence + temperature nudging ;
	float32 dQ2(tile, z, y, x) ;
		dQ2:units = kg/kg/s ;
		dQ2:long_name = apparent moistening from high resolution data ;
		dQ2:description = Apparent moistening due to physics and sub-grid-scale advection. Given by sat adjustment (dycore) + physics tendency + eddy-flux-convergence ;
	object time() ;

// global attributes:
}